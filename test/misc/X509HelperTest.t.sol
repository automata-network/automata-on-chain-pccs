// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Test.sol";
import "../../src/helpers/X509Helper.sol";
import "../../src/helpers/X509CRLHelper.sol";

contract X509HelperTest is Test {
    X509Helper X509;
    X509CRLHelper X509_CRL;
    bytes constant sampleRootCaDer =
        hex"3082028f30820234a003020102021422650cd65a9d3489f383b49552bf501b392706ac300a06082a8648ce3d0403023068311a301806035504030c11496e74656c2053475820526f6f74204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b3009060355040613025553301e170d3138303532313130343531305a170d3439313233313233353935395a3068311a301806035504030c11496e74656c2053475820526f6f74204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d030107034200040ba9c4c0c0c86193a3fe23d6b02cda10a8bbd4e88e48b4458561a36e705525f567918e2edc88e40d860bd0cc4ee26aacc988e505a953558c453f6b0904ae7394a381bb3081b8301f0603551d2304183016801422650cd65a9d3489f383b49552bf501b392706ac30520603551d1f044b30493047a045a043864168747470733a2f2f6365727469666963617465732e7472757374656473657276696365732e696e74656c2e636f6d2f496e74656c534758526f6f7443412e646572301d0603551d0e0416041422650cd65a9d3489f383b49552bf501b392706ac300e0603551d0f0101ff04040302010630120603551d130101ff040830060101ff020101300a06082a8648ce3d0403020349003046022100e5bfe50911f92f428920dc368a302ee3d12ec5867ff622ec6497f78060c13c20022100e09d25ac7a0cb3e5e8e68fec5fa3bd416c47440bd950639d450edcbea4576aa2";
    bytes constant sampleRootCrlDer =
        hex"308201223081c8020101300a06082a8648ce3d0403023068311a301806035504030c11496e74656c2053475820526f6f74204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b3009060355040613025553170d3234303332303139313933305a170d3235303430333139313933305aa02f302d300a0603551d140403020101301f0603551d2304183016801422650cd65a9d3489f383b49552bf501b392706ac300a06082a8648ce3d0403020349003046022100e7606fef2da68785a0c39bc34ac344c9e2d6ed4b0223e79a6c6297d421b73784022100fc1587aece4296d5e9370fd6a444a72d03c598cb21dc8104c55b127b766ea82b";
    bytes constant samplePlatformCaDer =
        hex"308202963082023da003020102021500956f5dcdbd1be1e94049c9d4f433ce01570bde54300a06082a8648ce3d0403023068311a301806035504030c11496e74656c2053475820526f6f74204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b3009060355040613025553301e170d3138303532313130353031305a170d3333303532313130353031305a30703122302006035504030c19496e74656c205347582050434b20506c6174666f726d204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d0301070342000435207feeddb595748ed82bb3a71c3be1e241ef61320c6816e6b5c2b71dad5532eaea12a4eb3f948916429ea47ba6c3af82a15e4b19664e52657939a2d96633dea381bb3081b8301f0603551d2304183016801422650cd65a9d3489f383b49552bf501b392706ac30520603551d1f044b30493047a045a043864168747470733a2f2f6365727469666963617465732e7472757374656473657276696365732e696e74656c2e636f6d2f496e74656c534758526f6f7443412e646572301d0603551d0e04160414956f5dcdbd1be1e94049c9d4f433ce01570bde54300e0603551d0f0101ff04040302010630120603551d130101ff040830060101ff020100300a06082a8648ce3d040302034700304402205ec5648b4c3e8ba558196dd417fdb6b9a5ded182438f551e9c0f938c3d5a8b970220261bd520260f9c647d3569be8e14a32892631ac358b994478088f4d2b27cf37e";
    bytes constant samplePlatformCrlDer =
        hex"30820a6230820a08020101300a06082a8648ce3d04030230703122302006035504030c19496e74656c205347582050434b20506c6174666f726d204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b3009060355040613025553170d3234303631393037353632325a170d3234303731393037353632325a30820934303302146fc34e5023e728923435d61aa4b83c618166ad35170d3234303631393037353632325a300c300a0603551d1504030a01013034021500efae6e9715fca13b87e333e8261ed6d990a926ad170d3234303631393037353632325a300c300a0603551d1504030a01013034021500fd608648629cba73078b4d492f4b3ea741ad08cd170d3234303631393037353632325a300c300a0603551d1504030a010130340215008af924184e1d5afddd73c3d63a12f5e8b5737e56170d3234303631393037353632325a300c300a0603551d1504030a01013034021500b1257978cfa9ccdd0759abf8c5ca72fae3a78a9b170d3234303631393037353632325a300c300a0603551d1504030a01013033021474fea614a972be0e2843f2059835811ed872f9b3170d3234303631393037353632325a300c300a0603551d1504030a01013034021500f9c4ef56b3ab48d577e108baedf4bf88014214b9170d3234303631393037353632325a300c300a0603551d1504030a010130330214071de0778f9e5fc4f2878f30d6b07c9a30e6b30b170d3234303631393037353632325a300c300a0603551d1504030a01013034021500cde2424f972cea94ff239937f4d80c25029dd60b170d3234303631393037353632325a300c300a0603551d1504030a0101303302146c3319e5109b64507d3cf1132ce00349ef527319170d3234303631393037353632325a300c300a0603551d1504030a01013034021500df08d756b66a7497f43b5bb58ada04d3f4f7a937170d3234303631393037353632325a300c300a0603551d1504030a01013033021428af485b6cf67e409a39d5cb5aee4598f7a8fa7b170d3234303631393037353632325a300c300a0603551d1504030a01013034021500fb8b2daec092cada8aa9bc4ff2f1c20d0346668c170d3234303631393037353632325a300c300a0603551d1504030a01013034021500cd4850ac52bdcc69a6a6f058c8bc57bbd0b5f864170d3234303631393037353632325a300c300a0603551d1504030a01013034021500994dd3666f5275fb805f95dd02bd50cb2679d8ad170d3234303631393037353632325a300c300a0603551d1504030a0101303302140702136900252274d9035eedf5457462fad0ef4c170d3234303631393037353632325a300c300a0603551d1504030a01013033021461f2bf73e39b4e04aa27d801bd73d24319b5bf80170d3234303631393037353632325a300c300a0603551d1504030a0101303302143992be851b96902eff38959e6c2eff1b0651a4b5170d3234303631393037353632325a300c300a0603551d1504030a010130330214639f139a5040fdcff191e8a4fb1bf086ed603971170d3234303631393037353632325a300c300a0603551d1504030a01013034021500959d533f9249dc1e513544cdc830bf19b7f1f301170d3234303631393037353632325a300c300a0603551d1504030a0101303302140fda43a00b68ea79b7c2deaeac0b498bdfb2af90170d3234303631393037353632325a300c300a0603551d1504030a010130340215009d67753b81e47090aea763fbec4c4549bcdb9933170d3234303631393037353632325a300c300a0603551d1504030a01013033021434bfbb7a1d9c568147e118b614f7b76ed3ef68df170d3234303631393037353632325a300c300a0603551d1504030a0101303402150085d3c9381b77a7e04d119c9e5ad6749ff3ffab87170d3234303631393037353632325a300c300a0603551d1504030a0101303402150093887ca4411e7a923bd1fed2819b2949f201b5b4170d3234303631393037353632325a300c300a0603551d1504030a0101303302142498dc6283930996fd8bf23a37acbe26a3bed457170d3234303631393037353632325a300c300a0603551d1504030a010130340215008a66f1a749488667689cc3903ac54c662b712e73170d3234303631393037353632325a300c300a0603551d1504030a01013034021500afc13610bdd36cb7985d106481a880d3a01fda07170d3234303631393037353632325a300c300a0603551d1504030a01013034021500efe04b2c33d036aac96ca673bf1e9a47b64d5cbb170d3234303631393037353632325a300c300a0603551d1504030a0101303402150083d9ac8d8bb509d1c6c809ad712e8430559ed7f3170d3234303631393037353632325a300c300a0603551d1504030a0101303302147931fd50b5071c1bbfc5b7b6ded8b45b9d8b8529170d3234303631393037353632325a300c300a0603551d1504030a0101303302141fa20e2970bde5d57f7b8ddf8339484e1f1d0823170d3234303631393037353632325a300c300a0603551d1504030a0101303302141e87b2c3b32d8d23e411cef34197b95af0c8adf5170d3234303631393037353632325a300c300a0603551d1504030a010130340215009afd2ee90a473550a167d996911437c7502d1f09170d3234303631393037353632325a300c300a0603551d1504030a0101303302144481b0f11728a13b696d3ea9c770a0b15ec58dda170d3234303631393037353632325a300c300a0603551d1504030a01013034021500a7859f57982ef0e67d37bc8ef2ef5ac835ff1aa9170d3234303631393037353632325a300c300a0603551d1504030a0101303302147ae37748a9f912f4c63ba7ab07c593ce1d1d1181170d3234303631393037353632325a300c300a0603551d1504030a01013033021413884b33269938c195aa170fca75da177538df0b170d3234303631393037353632325a300c300a0603551d1504030a0101303302142c3cc6fe9279db1516d5ce39f2a898cda5a175e1170d3234303631393037353632325a300c300a0603551d1504030a010130330214717948687509234be979e4b7dce6f31bef64b68c170d3234303631393037353632325a300c300a0603551d1504030a010130340215009d76ef2c39c136e8658b6e7396b1d7445a27631f170d3234303631393037353632325a300c300a0603551d1504030a01013034021500c3e025fca995f36f59b48467939e3e34e6361a6f170d3234303631393037353632325a300c300a0603551d1504030a010130340215008c5f6b3257da05b17429e2e61ba965d67330606a170d3234303631393037353632325a300c300a0603551d1504030a01013034021500a17c51722ec1e0c3278fe8bdf052059cbec4e648170d3234303631393037353632325a300c300a0603551d1504030a0101a02f302d300a0603551d140403020101301f0603551d23041830168014956f5dcdbd1be1e94049c9d4f433ce01570bde54300a06082a8648ce3d040302034800304502210080d35820014cacef27026d1009d239deae53f4839d9e54e74de3ad000998da9a02202abd95d5cf1943b999eac7db47ade0d17a5356d5d3e09d43ade85d9ba8742cc8";
    bytes constant samplePckDer =
        hex"308204f230820498a00302010202142a7d4efbe5d0add11a682e797092f4b691478379300a06082a8648ce3d04030230703122302006035504030c19496e74656c205347582050434b20506c6174666f726d204341311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b3009060355040613025553301e170d3233303832343231343033305a170d3330303832343231343033305a30703122302006035504030c19496e74656c205347582050434b204365727469666963617465311a3018060355040a0c11496e74656c20436f72706f726174696f6e3114301206035504070c0b53616e746120436c617261310b300906035504080c024341310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d03010703420004d191af3aa502625f6b05762a07a3f569f026c7df131843575ba11bd9e65bbb743d97676efb3f960c6b5c151b5560a63c21283885f0855eacb269e490717e5a64a382030e3082030a301f0603551d23041830168014956f5dcdbd1be1e94049c9d4f433ce01570bde54306b0603551d1f046430623060a05ea05c865a68747470733a2f2f6170692e7472757374656473657276696365732e696e74656c2e636f6d2f7367782f63657274696669636174696f6e2f76332f70636b63726c3f63613d706c6174666f726d26656e636f64696e673d646572301d0603551d0e041604140debe1129b1a74f59d72f0659aeb414600264c25300e0603551d0f0101ff0404030206c0300c0603551d130101ff040230003082023b06092a864886f84d010d010482022c30820228301e060a2a864886f84d010d01010410caedec04d9afd957c2df2db0fc34836f30820165060a2a864886f84d010d0102308201553010060b2a864886f84d010d01020102010c3010060b2a864886f84d010d01020202010c3010060b2a864886f84d010d0102030201033010060b2a864886f84d010d0102040201033011060b2a864886f84d010d010205020200ff3011060b2a864886f84d010d010206020200ff3010060b2a864886f84d010d0102070201013010060b2a864886f84d010d0102080201003010060b2a864886f84d010d0102090201003010060b2a864886f84d010d01020a0201003010060b2a864886f84d010d01020b0201003010060b2a864886f84d010d01020c0201003010060b2a864886f84d010d01020d0201003010060b2a864886f84d010d01020e0201003010060b2a864886f84d010d01020f0201003010060b2a864886f84d010d0102100201003010060b2a864886f84d010d01021102010d301f060b2a864886f84d010d01021204100c0c0303ffff010000000000000000003010060a2a864886f84d010d0103040200003014060a2a864886f84d010d0104040600606a000000300f060a2a864886f84d010d01050a0101301e060a2a864886f84d010d01060410e9ebc4da8072a2137aff4af003899dfa3044060a2a864886f84d010d010730363010060b2a864886f84d010d0107010101ff3010060b2a864886f84d010d0107020101003010060b2a864886f84d010d010703010100300a06082a8648ce3d0403020348003045022047ee02c3877b1a3b211c70a5cfd2db8b164911cff57e5cec0c83cc4d00b3f82d022100f44279902fe36437b2737997e53f1746e21cfb29efb809849fb4a0231d366ef4";

    function setUp() public {
        X509 = new X509Helper();
        X509_CRL = new X509CRLHelper();
    }

    /// @notice the Root's Authority and Subject Key Identifiers must equal
    function testRootCaSkidEqualsAkid() public {
        bytes memory akid = X509.getAuthorityKeyIdentifier(sampleRootCaDer);
        bytes memory skid = X509.getSubjectKeyIdentifier(sampleRootCaDer);
        assertEq(akid, skid);

        // parsed
        X509CertObj memory parsedRootCa = X509.parseX509DER(sampleRootCaDer);
        assertEq(parsedRootCa.authorityKeyIdentifier, akid);
        assertEq(parsedRootCa.subjectKeyIdentifier, skid);
    }

    /// @notice the Root CRL Authority KI must equal the Root CA Subject KI
    function testRootCrlAuthorityKeyIdentifier() public {
        bytes memory crl_akid = X509_CRL.getAuthorityKeyIdentifier(sampleRootCrlDer);
        bytes memory ca_skid = X509.getSubjectKeyIdentifier(sampleRootCaDer);
        assertEq(crl_akid, ca_skid);

        // parsed
        X509CRLObj memory parsedRootCrl = X509_CRL.parseCRLDER(sampleRootCrlDer);
        assertEq(crl_akid, parsedRootCrl.authorityKeyIdentifier);
    }

    /// @notice the PCK Cert Authority KI must equal the Platform CA Subject KI
    /// @notice the Platform CA Authority KI must equal the Root CA Subject KI
    function testPlatformCaSkidEqualsAkid() public {
        bytes memory rootSkid = X509.getSubjectKeyIdentifier(sampleRootCaDer);

        bytes memory platformAkid = X509.getAuthorityKeyIdentifier(samplePlatformCaDer);
        bytes memory platformSkid = X509.getSubjectKeyIdentifier(samplePlatformCaDer);

        bytes memory pckAkId = X509.getAuthorityKeyIdentifier(samplePckDer);

        assertEq(platformAkid, rootSkid);
        assertEq(pckAkId, platformSkid);
    }

    /// @notice the Platform CRL Authority KI must equal the Platform CA Subject KI
    function testPlatformCrlAuthorityKeyIdentifier() public {
        bytes memory crl_akid = X509_CRL.getAuthorityKeyIdentifier(samplePlatformCrlDer);
        bytes memory ca_skid = X509.getSubjectKeyIdentifier(samplePlatformCaDer);
        assertEq(crl_akid, ca_skid);

        // parsed
        X509CRLObj memory parsedPlatformCrl = X509_CRL.parseCRLDER(samplePlatformCrlDer);
        assertEq(crl_akid, parsedPlatformCrl.authorityKeyIdentifier);
    }

    function testCrlAndCaMismatch() public {
        bytes memory platform_crl_akid = X509_CRL.getAuthorityKeyIdentifier(samplePlatformCrlDer);
        bytes memory platform_ca_skid = X509.getSubjectKeyIdentifier(samplePlatformCaDer);

        bytes memory root_crl_akid = X509_CRL.getAuthorityKeyIdentifier(sampleRootCrlDer);
        bytes memory root_ca_skid = X509.getSubjectKeyIdentifier(sampleRootCaDer);

        assertFalse(keccak256(root_crl_akid) == keccak256(platform_ca_skid));
        assertFalse(keccak256(platform_crl_akid) == keccak256(root_ca_skid));
    }
}
